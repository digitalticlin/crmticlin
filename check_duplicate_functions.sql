-- =====================================================================
-- üîç VERIFICAR SE S√ÉO 2 FUN√á√ïES DIFERENTES OU DUPLICADAS
-- =====================================================================
-- Verificar todas as fun√ß√µes save_whatsapp_message_service_role
-- =====================================================================

-- 1Ô∏è‚É£ LISTAR TODAS AS FUN√á√ïES COM ESSE NOME
SELECT 
    p.proname as function_name,
    p.oid as function_oid,
    pg_get_function_identity_arguments(p.oid) as parameters,
    array_length(proargtypes, 1) as param_count,
    p.provolatile as volatility,
    p.proisstrict as is_strict,
    p.prosecdef as security_definer,
    obj_description(p.oid) as description,
    pg_get_userbyid(p.proowner) as owner
FROM pg_proc p
JOIN pg_namespace n ON p.pronamespace = n.oid
WHERE n.nspname = 'public'
AND p.proname = 'save_whatsapp_message_service_role'
ORDER BY p.oid;

-- =====================================================================

-- 2Ô∏è‚É£ COMPARAR ASSINATURAS DETALHADAS
SELECT 
    'FUN√á√ÉO ' || row_number() OVER (ORDER BY p.oid) as funcao_numero,
    p.oid as function_oid,
    pg_get_function_arguments(p.oid) as argumentos_completos,
    array_length(proargtypes, 1) as total_parametros,
    proargtypes as tipos_parametros,
    proargnames as nomes_parametros,
    substring(prosrc, 1, 200) || '...' as inicio_codigo
FROM pg_proc p
JOIN pg_namespace n ON p.pronamespace = n.oid
WHERE n.nspname = 'public'
AND p.proname = 'save_whatsapp_message_service_role'
ORDER BY p.oid;

-- =====================================================================

-- 3Ô∏è‚É£ VERIFICAR SE H√Å OVERLOAD (PostgreSQL permite m√∫ltiplas fun√ß√µes mesmo nome)
SELECT 
    'AN√ÅLISE DE OVERLOAD:' as info,
    COUNT(*) as total_funcoes,
    COUNT(DISTINCT proargtypes) as assinaturas_diferentes,
    CASE 
        WHEN COUNT(*) > 1 AND COUNT(DISTINCT proargtypes) > 1 THEN '‚úÖ S√ÉO FUN√á√ïES DIFERENTES (OVERLOAD)'
        WHEN COUNT(*) > 1 AND COUNT(DISTINCT proargtypes) = 1 THEN '‚ùå S√ÉO FUN√á√ïES DUPLICADAS'
        ELSE '‚úÖ APENAS UMA FUN√á√ÉO'
    END as resultado
FROM pg_proc p
JOIN pg_namespace n ON p.pronamespace = n.oid
WHERE n.nspname = 'public'
AND p.proname = 'save_whatsapp_message_service_role';

-- =====================================================================

-- 4Ô∏è‚É£ SE FOREM DIFERENTES, MOSTRAR AS DIFEREN√áAS
SELECT 
    'DIFEREN√áAS NOS PAR√ÇMETROS:' as analise,
    p.oid as function_oid,
    'Fun√ß√£o ' || row_number() OVER (ORDER BY p.oid) as funcao,
    pg_get_function_arguments(p.oid) as parametros,
    -- Identificar qual tem p_base64_data
    CASE 
        WHEN pg_get_function_arguments(p.oid) LIKE '%p_base64_data%' THEN '‚úÖ TEM p_base64_data'
        ELSE '‚ùå N√ÉO TEM p_base64_data'
    END as tem_base64_data,
    -- Contar par√¢metros
    array_length(proargtypes, 1) as total_params
FROM pg_proc p
JOIN pg_namespace n ON p.pronamespace = n.oid
WHERE n.nspname = 'public'
AND p.proname = 'save_whatsapp_message_service_role'
ORDER BY p.oid;

-- =====================================================================
-- üìã OBJETIVO DESTA VERIFICA√á√ÉO
-- =====================================================================
/*
üéØ ESTA VERIFICA√á√ÉO VAI DETERMINAR:

1. ‚úÖ Se realmente existem 2 fun√ß√µes diferentes (overload v√°lido)
2. ‚ùå Se s√£o fun√ß√µes duplicadas (erro de cria√ß√£o)
3. üîç Qual fun√ß√£o tem p_base64_data (para CRM interno)
4. üîç Qual fun√ß√£o N√ÉO tem p_base64_data (para VPS webhook)

üì± RESULTADO ESPERADO:
- Fun√ß√£o VPS (webhook): 9 par√¢metros, SEM p_base64_data
- Fun√ß√£o CRM (interno): 10 par√¢metros, COM p_base64_data

üéØ PR√ìXIMOS PASSOS:
- Se s√£o diferentes: Renomear uma para evitar confus√£o
- Se s√£o duplicadas: Dropar uma e manter a correta
- Corrigir apenas a fun√ß√£o que recebe da VPS
*/