-- ================================================================
-- MONITORAMENTO FINAL: VERIFICAR SE CORRE√á√ÉO RESOLVEU O PROBLEMA
-- ================================================================

-- üéØ OBJETIVO: Monitorar se "Message ID not returned" foi resolvido
-- üîç VERIFICAR: Se Storage URLs est√£o sendo geradas ap√≥s corre√ß√£o

-- ================================================================
-- 1Ô∏è‚É£ RESUMO GERAL DO PROBLEMA RESOLVIDO
-- ================================================================

SELECT 
    'üìä AN√ÅLISE ANTES VS DEPOIS DA CORRE√á√ÉO' as categoria,
    jsonb_build_object(
        'problema_identificado', 'RPC retornava { message_id: "..." } mas Edge Function esperava { data: { message_id: "..." } }',
        'sintoma', 'Message ID not returned - Edge Function n√£o conseguia acessar result.data.message_id',
        'consequencia', 'Mensagens n√£o eram enfileiradas, workers n√£o processavam, Storage URLs n√£o geradas',
        'corre√ß√£o_aplicada', 'RPC modificada para retornar estrutura aninhada em "data"',
        'resultado_esperado', 'Edge Function agora acessa result.data.message_id corretamente'
    ) as detalhes;

-- ================================================================
-- 2Ô∏è‚É£ VERIFICAR ESTRUTURA ATUAL DAS MENSAGENS
-- ================================================================

SELECT 
    'üìà ESTAT√çSTICAS ATUAIS' as status,
    COUNT(*) as total_mensagens_midia,
    COUNT(*) FILTER (WHERE media_url IS NOT NULL AND media_url LIKE 'https://%') as com_storage_url,
    COUNT(*) FILTER (WHERE media_url IS NULL OR media_url NOT LIKE 'https://%') as sem_storage_url,
    ROUND(
        COUNT(*) FILTER (WHERE media_url IS NOT NULL AND media_url LIKE 'https://%')::numeric * 100.0 / 
        NULLIF(COUNT(*), 0), 2
    ) as percentual_processado
FROM messages 
WHERE created_by_user_id = '712e7708-2299-4a00-9128-577c8f113ca4'::UUID
AND media_type != 'text'
AND created_at > now() - interval '3 hours';

-- ================================================================
-- 3Ô∏è‚É£ MENSAGENS MAIS RECENTES E SEUS STATUS
-- ================================================================

SELECT 
    'üîç √öLTIMAS MENSAGENS POR TIPO' as categoria,
    media_type::text,
    COUNT(*) as quantidade,
    COUNT(*) FILTER (WHERE media_url IS NOT NULL AND media_url LIKE 'https://%') as com_url,
    COUNT(*) FILTER (WHERE media_url IS NULL) as sem_url,
    ROUND(
        COUNT(*) FILTER (WHERE media_url IS NOT NULL AND media_url LIKE 'https://%')::numeric * 100.0 / 
        NULLIF(COUNT(*), 0), 2
    ) as percentual_sucesso
FROM messages 
WHERE created_by_user_id = '712e7708-2299-4a00-9128-577c8f113ca4'::UUID
AND media_type != 'text'
AND created_at > now() - interval '3 hours'
GROUP BY media_type
ORDER BY quantidade DESC;

-- ================================================================
-- 4Ô∏è‚É£ DETALHES DAS MENSAGENS MAIS RECENTES
-- ================================================================

SELECT 
    'üì± MENSAGENS RECENTES DETALHADAS' as status,
    id,
    text,
    media_type::text,
    CASE 
        WHEN media_url IS NOT NULL AND media_url LIKE 'https://nruwnhcqhcdtxlqhygis.supabase.co/storage%' THEN 'URL STORAGE ‚úÖ'
        WHEN media_url IS NOT NULL THEN 'URL EXTERNA üîó'
        ELSE 'SEM URL ‚ùå'
    END as status_media_url,
    CASE 
        WHEN length(media_url) > 50 THEN left(media_url, 47) || '...'
        ELSE media_url
    END as url_preview,
    external_message_id,
    to_char(created_at, 'DD/MM HH24:MI:SS') as criado_em
FROM messages 
WHERE created_by_user_id = '712e7708-2299-4a00-9128-577c8f113ca4'::UUID
AND media_type != 'text'
AND created_at > now() - interval '2 hours'
ORDER BY created_at DESC
LIMIT 10;

-- ================================================================
-- 5Ô∏è‚É£ STATUS DAS FILAS E WORKERS
-- ================================================================

SELECT 
    'üì¶ STATUS FILAS E PROCESSAMENTO' as categoria,
    queue_name,
    (pgmq.metrics(queue_name)).queue_length as mensagens_pendentes,
    (pgmq.metrics(queue_name)).total_messages as total_processadas
FROM (
    VALUES 
        ('webhook_message_queue'),
        ('app_message_queue'),
        ('ai_message_queue')
) AS queues(queue_name);

-- ================================================================
-- 6Ô∏è‚É£ VERIFICAR CONTROLE DE PROCESSAMENTO
-- ================================================================

SELECT 
    '‚öôÔ∏è CONTROLE DE PROCESSAMENTO WORKERS' as status,
    processing_status,
    COUNT(*) as quantidade,
    COUNT(*) FILTER (WHERE processing_status = 'completed') as concluidos,
    COUNT(*) FILTER (WHERE processing_status = 'failed') as falhas,
    COUNT(*) FILTER (WHERE processing_status = 'processing') as em_processamento
FROM public.queue_processing_control
WHERE started_at > now() - interval '2 hours'
GROUP BY processing_status
ORDER BY quantidade DESC;

-- ================================================================
-- 7Ô∏è‚É£ TESTE FINAL: SIMULAR NOVA MENSAGEM
-- ================================================================

DO $$
DECLARE
    v_test_result jsonb;
    v_message_id text;
    v_success boolean;
    v_external_id text;
BEGIN
    RAISE NOTICE 'üß™ TESTE FINAL: NOVA MENSAGEM COM CORRE√á√ÉO APLICADA...';
    
    v_external_id := 'FINAL_TEST_' || extract(epoch from now())::text;
    
    -- Simular exatamente como webhook real chama
    SELECT save_received_message_webhook(
        '012c87cc-e10a-47e0-96c6-6f7d28beb7c6',
        '5511999888777@c.us',
        'Teste final corre√ß√£o',
        false,
        'image',
        NULL,
        v_external_id,
        'Usuario Teste',
        NULL,
        'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==',
        'image/png',
        'teste_final.png'
    ) INTO v_test_result;
    
    -- Extrair dados como Edge Function faz
    v_message_id := v_test_result->'data'->>'message_id';
    v_success := (v_test_result->'data'->>'success')::boolean;
    
    RAISE NOTICE 'üìä RESULTADO TESTE FINAL:';
    RAISE NOTICE '  - result.data.message_id: %', v_message_id;
    RAISE NOTICE '  - result.data.success: %', v_success;
    RAISE NOTICE '  - Estrutura completa: %', v_test_result;
    
    IF v_message_id IS NOT NULL AND v_success THEN
        RAISE NOTICE '‚úÖ CORRE√á√ÉO CONFIRMADA: Edge Function agora recebe message_id';
        RAISE NOTICE 'üöÄ Pr√≥ximo: Executar worker para gerar Storage URL';
        
        -- Executar worker uma vez para processar
        BEGIN
            DECLARE
                v_worker_result jsonb;
            BEGIN
                SELECT webhook_media_worker() INTO v_worker_result;
                RAISE NOTICE '‚öôÔ∏è Worker executado: %', v_worker_result;
            EXCEPTION WHEN OTHERS THEN
                RAISE NOTICE '‚ùå Erro no worker: %', SQLERRM;
            END;
        END;
        
    ELSE
        RAISE NOTICE '‚ùå CORRE√á√ÉO AINDA TEM PROBLEMA';
    END IF;
END $$;

-- ================================================================
-- 8Ô∏è‚É£ RESULTADO DO TESTE FINAL
-- ================================================================

SELECT 
    'üéØ RESULTADO DO TESTE FINAL' as status,
    id,
    text,
    media_type::text,
    CASE 
        WHEN media_url IS NOT NULL AND media_url LIKE 'https://%' THEN 'SUCESSO COMPLETO ‚úÖ'
        WHEN media_url IS NULL THEN 'PROCESSAMENTO PENDENTE ‚è≥'
        ELSE 'PROBLEMA ‚ùå'
    END as status_final,
    media_url,
    external_message_id
FROM messages 
WHERE external_message_id LIKE 'FINAL_TEST_%'
ORDER BY created_at DESC
LIMIT 1;

-- ================================================================
-- 9Ô∏è‚É£ RESUMO EXECUTIVO
-- ================================================================

SELECT 
    'üìã RESUMO EXECUTIVO DA CORRE√á√ÉO' as resultado,
    jsonb_build_object(
        'problema_original', 'Message ID not returned',
        'causa_raiz', 'RPC retornava estrutura incompat√≠vel com Edge Function',
        'corre√ß√£o_aplicada', 'RPC modificada para retornar { data: { message_id } }',
        'status_corre√ß√£o', 
            CASE 
                WHEN EXISTS (
                    SELECT 1 FROM messages 
                    WHERE external_message_id LIKE 'FINAL_TEST_%'
                    AND media_url IS NOT NULL 
                    AND media_url LIKE 'https://%'
                ) THEN 'CORRE√á√ÉO FUNCIONANDO ‚úÖ'
                WHEN EXISTS (
                    SELECT 1 FROM messages 
                    WHERE external_message_id LIKE 'FINAL_TEST_%'
                ) THEN 'MENSAGEM SALVA, AGUARDANDO WORKER ‚è≥'
                ELSE 'NECESSITA INVESTIGA√á√ÉO ‚ùå'
            END,
        'pr√≥ximos_passos', 'Monitorar novas mensagens para confirmar Storage URLs'
    ) as detalhes;