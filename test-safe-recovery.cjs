// üõ°Ô∏è TESTE SEGURO DO M√ìDULO DE RECUPERA√á√ÉO
// Este teste N√ÉO modifica nada na VPS, apenas analisa e reporta

const SafeRecoveryModule = require('./recovery-module-safe.js');

async function testSafeRecovery() {
  console.log('üõ°Ô∏è === TESTE SEGURO DO M√ìDULO DE RECUPERA√á√ÉO ===');
  
  const recovery = new SafeRecoveryModule({
    vpsUrl: 'http://31.97.163.57:3001',
    authToken: 'bJyn3eUPFTRFNCxxLNd8KH5bI4Zg7bpUk7ADO6kXf49026a1',
    supabaseUrl: 'https://rhjgagzstjzynvrakdyj.supabase.co',
    supabaseKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJoamdhZ3pzdGp6eW52cmFrZHlqIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDUxMzEwMCwiZXhwIjoyMDY2MDg5MTAwfQ.48XYhDq4XdVTqNhIHdskd6iMcJem38aHzk6U1psfRRM',
    enabled: true
  });

  console.log('\nüõ°Ô∏è 1. Verificando status inicial...');
  console.log(recovery.getStatus());

  console.log('\nüõ°Ô∏è 2. Executando an√°lise segura (DRY RUN)...');
  const result = await recovery.executeSafeRecovery(true); // DRY RUN - n√£o modifica nada

  if (result.success) {
    console.log('\n‚úÖ AN√ÅLISE CONCLU√çDA COM SUCESSO:');
    console.log('üìä An√°lise:', result.report.analysis);
    
    if (result.report.wouldDelete?.length > 0) {
      console.log('\nüóëÔ∏è INST√ÇNCIAS √ìRF√ÉS QUE SERIAM DELETADAS:');
      result.report.wouldDelete.forEach(id => console.log(`   ‚Ä¢ ${id}`));
    }
    
    if (result.report.wouldRecover?.length > 0) {
      console.log('\nüîß INST√ÇNCIAS QUE SERIAM RECUPERADAS:');
      result.report.wouldRecover.forEach(id => console.log(`   ‚Ä¢ ${id}`));
    }
    
    console.log('\nüõ°Ô∏è NENHUMA MODIFICA√á√ÉO FOI FEITA - APENAS AN√ÅLISE');
  } else {
    console.log('\n‚ùå ERRO NA AN√ÅLISE:', result.error);
  }

  console.log('\nüõ°Ô∏è 3. Status final...');
  console.log(recovery.getStatus());
}

// Executar teste apenas se chamado diretamente
if (require.main === module) {
  testSafeRecovery().catch(console.error);
}

module.exports = { testSafeRecovery }; 