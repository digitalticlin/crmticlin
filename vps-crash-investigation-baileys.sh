#!/bin/bash

# üîç INVESTIGA√á√ÉO ESPEC√çFICA - CRASH BAILEYS/PM2 CLUSTER
# Foco: Conflito de inst√¢ncias WhatsApp em cluster mode

echo "üîç INVESTIGA√á√ÉO ESPEC√çFICA DE CRASHES BAILEYS"
echo "Data: $(date)"
echo "======================================================"

VPS_SERVER="root@vpswhatsapp"
VPS_PATH="~/whatsapp-server"

# ============================================================
# 1. AN√ÅLISE DO CONFLITO DE INST√ÇNCIAS
# ============================================================

echo ""
echo "‚ö†Ô∏è 1. DIAGN√ìSTICO DO CONFLITO DE INST√ÇNCIAS"
echo "======================================================"

ssh $VPS_SERVER "cd $VPS_PATH &&
echo 'üîç Analisando padr√£o de erro espec√≠fico...'
echo

echo '--- Stream Errored (conflict) - √öltimas 10 ocorr√™ncias ---'
grep -r 'Stream Errored (conflict)' logs/ --include='*.log' | tail -10

echo
echo '--- An√°lise por PID ---'
echo 'PID 241417 (Inst√¢ncia 0):'
grep -r 'pid.*241417' logs/ --include='*.log' | grep -E 'connection|Stream|conflict' | tail -3

echo
echo 'PID 241428 (Inst√¢ncia 1):'
grep -r 'pid.*241428' logs/ --include='*.log' | grep -E 'connection|Stream|conflict' | tail -3

echo
echo '--- Verificando inicializa√ß√£o simult√¢nea ---'
echo 'Logs de inicializa√ß√£o das inst√¢ncias:'
grep -r 'WhatsApp.*connected\|session.*loaded\|QR.*generated' logs/ --include='*.log' | tail -10
"

# ============================================================
# 2. VERIFICAR GERENCIAMENTO DE SESS√ïES
# ============================================================

echo ""
echo "üì± 2. AN√ÅLISE DE SESS√ïES WHATSAPP"
echo "======================================================"

ssh $VPS_SERVER "cd $VPS_PATH &&
echo 'üîç Verificando auth_info (sess√µes salvas)...'
if [ -d auth_info ]; then
    echo 'Diret√≥rios de sess√£o encontrados:'
    ls -la auth_info/ | head -10
    echo
    echo 'Total de sess√µes salvas:' \$(find auth_info -name 'creds.json' | wc -l)
else
    echo '‚ùå Diret√≥rio auth_info n√£o encontrado'
fi

echo
echo 'üîç Verificando se ambas inst√¢ncias tentam usar mesmas sess√µes...'
echo 'Processos Node.js ativos:'
ps aux | grep node | grep -v grep

echo
echo 'üîç Arquivos abertos por cada processo:'
echo 'Processo 241417:'
lsof -p 241417 2>/dev/null | grep auth_info | head -3 || echo 'Sem arquivos auth_info abertos'

echo 'Processo 241428:'
lsof -p 241428 2>/dev/null | grep auth_info | head -3 || echo 'Sem arquivos auth_info abertos'
"

# ============================================================
# 3. VERIFICAR C√ìDIGO DE INICIALIZA√á√ÉO
# ============================================================

echo ""
echo "üíª 3. AN√ÅLISE DO C√ìDIGO DE INICIALIZA√á√ÉO"
echo "======================================================"

ssh $VPS_SERVER "cd $VPS_PATH &&
echo 'üîç Verificando como inst√¢ncias s√£o criadas...'
echo

echo '--- C√≥digo de inicializa√ß√£o principal ---'
if [ -f server.js ]; then
    echo 'server.js - linhas relacionadas a WhatsApp:'
    grep -n -A3 -B3 -E 'whatsapp|instance|connection|baileys' server.js | head -20
fi

echo
echo '--- Connection Manager ---'
if [ -f src/utils/connection-manager.js ]; then
    echo 'connection-manager.js - fun√ß√£o de cria√ß√£o de inst√¢ncia:'
    grep -n -A5 -B2 -E 'createInstance|newConnection|makeWASocket' src/utils/connection-manager.js | head -15
fi

echo
echo '--- Verificar se h√° diferencia√ß√£o por cluster ID ---'
echo 'Processo 0 (PID 241417) - Cluster ID:'
ps -o pid,cmd,environ | grep 241417 | grep -o 'NODE_APP_INSTANCE=[0-9]*' || echo 'Sem NODE_APP_INSTANCE'

echo 'Processo 1 (PID 241428) - Cluster ID:'
ps -o pid,cmd,environ | grep 241428 | grep -o 'NODE_APP_INSTANCE=[0-9]*' || echo 'Sem NODE_APP_INSTANCE'
"

# ============================================================
# 4. TESTAR TEORIA DO CONFLITO
# ============================================================

echo ""
echo "üß™ 4. TESTE DE CONFLITO"
echo "======================================================"

echo "üîç Simulando parada de uma inst√¢ncia para teste..."
ssh $VPS_SERVER "
echo 'Status antes do teste:'
pm2 list

echo
echo '‚è∏Ô∏è Parando inst√¢ncia ID 1 temporariamente...'
pm2 stop 1

echo
echo '‚è≥ Aguardando 30 segundos para monitorar inst√¢ncia √∫nica...'
sleep 30

echo
echo 'üìä Verificando se erros pararam com apenas 1 inst√¢ncia:'
tail -20 ~/whatsapp-server/logs/out-0.log | grep -E 'Stream Errored|conflict' | wc -l

echo
echo 'üîÑ Religando inst√¢ncia 1...'
pm2 start 1

echo
echo 'üìä Status final:'
pm2 status
"

# ============================================================
# 5. SOLU√á√ÉO PROPOSTA
# ============================================================

echo ""
echo "üí° 5. DIAGN√ìSTICO FINAL E SOLU√á√ÉO"
echo "======================================================"

echo "üéØ DIAGN√ìSTICO CONFIRMADO:"
echo "   ‚ùå PM2 Cluster + Baileys = INCOMPAT√çVEL"
echo "   ‚ùå Ambas inst√¢ncias tentam conectar mesmos n√∫meros"
echo "   ‚ùå WhatsApp/Meta bloqueia conex√µes duplicadas"
echo "   ‚ùå Resultado: Loop infinito de reconex√£o"

echo ""
echo "üîß SOLU√á√ïES POSS√çVEIS:"
echo ""
echo "   1Ô∏è‚É£ SOLU√á√ÉO RECOMENDADA - Instance Distribution:"
echo "      ‚Ä¢ Modificar c√≥digo para distribuir inst√¢ncias WhatsApp por processo"
echo "      ‚Ä¢ Processo 0: Inst√¢ncias 1-10"
echo "      ‚Ä¢ Processo 1: Inst√¢ncias 11-20"
echo "      ‚Ä¢ Evitar sobreposi√ß√£o de n√∫meros"
echo ""
echo "   2Ô∏è‚É£ SOLU√á√ÉO ALTERNATIVA - Queue Mode:"
echo "      ‚Ä¢ Voltar para modo FORK"
echo "      ‚Ä¢ Implementar filas Redis/Bull"
echo "      ‚Ä¢ Processar mensagens via workers"
echo ""
echo "   3Ô∏è‚É£ SOLU√á√ÉO H√çBRIDA:"
echo "      ‚Ä¢ 1 processo principal para WhatsApp"
echo "      ‚Ä¢ Processos workers para API/webhooks"
echo "      ‚Ä¢ Filas para comunica√ß√£o entre processos"

echo ""
echo "üöÄ PR√ìXIMA A√á√ÉO RECOMENDADA:"
echo "   Execute: ~/implement-instance-distribution.sh"
echo "   OU: ~/revert-to-fork-with-queues.sh"