#!/bin/bash

# CORRE√á√ÉO CIR√öRGICA ULTRA-FOCADA PARA @LID
# OBJETIVO: Extrair n√∫mero real da mensagem, n√£o mapear estaticamente
# GARANTIA: N√ÉO toca em nenhum c√≥digo existente

VPS_IP="31.97.163.57"
VPS_USER="root"

echo "üîß CORRE√á√ÉO CIR√öRGICA PARA EXTRA√á√ÉO REAL DE @LID"
echo "================================================"
echo ""
echo "Esta corre√ß√£o:"
echo "‚úÖ N√ÉO modifica nenhum c√≥digo existente"
echo "‚úÖ ADICIONA extra√ß√£o inteligente de n√∫meros reais"
echo "‚úÖ IGNORA grupos completamente"  
echo "‚úÖ EXTRAI n√∫mero correto da estrutura da mensagem"
echo "‚úÖ PRESERVA todas as funcionalidades existentes"
echo ""

# Aplicar corre√ß√£o diretamente
ssh ${VPS_USER}@${VPS_IP} << 'EOFCIRURGICA'
cd /root/whatsapp-server/src/utils

# Backup de seguran√ßa
cp connection-manager.js connection-manager.js.pre-real-fix

echo "‚úÖ Backup de seguran√ßa criado"

# Verificar integridade atual
node -c connection-manager.js
if [ $? -ne 0 ]; then
  echo "‚ùå Arquivo atual tem erro de sintaxe!"
  exit 1
fi

echo "‚úÖ Arquivo atual √≠ntegro"

# Encontrar linha da classe ConnectionManager para inserir antes
CLASS_LINE=$(grep -n "class ConnectionManager" connection-manager.js | cut -d: -f1)

if [ -z "$CLASS_LINE" ]; then
  echo "‚ùå Classe ConnectionManager n√£o encontrada"
  exit 1
fi

echo "üìç Classe encontrada na linha $CLASS_LINE"

# Criar sistema de extra√ß√£o real
cat > temp-real-extractor.js << 'EOFEXTRACTOR'
// ============================================================================
// üîß REAL @LID EXTRACTOR - EXTRAI N√öMERO VERDADEIRO (N√ÉO MAPEIA)
// ============================================================================
const REAL_LID_NUMBER_EXTRACTOR = {
  
  // Extrai n√∫mero real de mensagens diretas com @lid corrompido
  extractRealNumber: function(message, remoteJid, logPrefix = '') {
    // Ignorar grupos COMPLETAMENTE
    if (remoteJid && (remoteJid.includes('@g.us') || remoteJid.includes('@broadcast'))) {
      return remoteJid; // Grupos passam direto, sem altera√ß√£o
    }
    
    // Se n√£o √© @lid, passar direto
    if (!remoteJid || !remoteJid.includes('@lid')) {
      return remoteJid;
    }
    
    const originalLid = remoteJid;
    console.log(`${logPrefix} üîç [REAL_EXTRACT] @lid detectado: "${originalLid}"`);
    
    // ESTRAT√âGIA 1: Buscar em verifiedName (campo comum com n√∫mero real)
    if (message.verifiedName) {
      const phonePattern = /55\d{10,11}/;
      const match = message.verifiedName.match(phonePattern);
      if (match) {
        const realNumber = match[0] + '@s.whatsapp.net';
        console.log(`${logPrefix} ‚úÖ [REAL_EXTRACT] Encontrado em verifiedName: ${realNumber}`);
        return realNumber;
      }
    }
    
    // ESTRAT√âGIA 2: Buscar n√∫mero em pushName 
    if (message.pushName) {
      const phonePattern = /(\d{10,13})/;
      const match = message.pushName.match(phonePattern);
      if (match && match[1].length >= 10) {
        let phone = match[1];
        if (!phone.startsWith('55')) phone = '55' + phone;
        if (phone.match(/^55\d{2}\d{8,9}$/)) {
          const realNumber = phone + '@s.whatsapp.net';
          console.log(`${logPrefix} ‚úÖ [REAL_EXTRACT] Encontrado em pushName: ${realNumber}`);
          return realNumber;
        }
      }
    }
    
    // ESTRAT√âGIA 3: Buscar qualquer n√∫mero brasileiro na estrutura
    const messageStr = JSON.stringify(message);
    const phonePattern = /55\d{10,11}/g;
    const matches = messageStr.match(phonePattern);
    if (matches && matches[0]) {
      const realNumber = matches[0] + '@s.whatsapp.net';
      console.log(`${logPrefix} ‚úÖ [REAL_EXTRACT] Encontrado na estrutura: ${realNumber}`);
      return realNumber;
    }
    
    // Se n√£o encontrou n√∫mero real, logar para an√°lise
    console.log(`${logPrefix} üö® [REAL_EXTRACT] N√ÉO ENCONTROU n√∫mero real para: ${originalLid}`);
    console.log(`${logPrefix} üö® [REAL_EXTRACT] verifiedName: ${message.verifiedName || 'N/A'}`);
    console.log(`${logPrefix} üö® [REAL_EXTRACT] pushName: ${message.pushName || 'N/A'}`);
    
    // IMPORTANTE: Retornar null indica que mensagem deve ser ignorada
    console.log(`${logPrefix} ‚ö†Ô∏è [REAL_EXTRACT] IGNORANDO mensagem @lid sem n√∫mero real`);
    return null; // Mensagem ser√° ignorada
  }
};

EOFEXTRACTOR

# Inserir sistema antes da classe
head -n $((CLASS_LINE - 1)) connection-manager.js > temp-before.js
cat temp-real-extractor.js >> temp-before.js
tail -n +${CLASS_LINE} connection-manager.js >> temp-before.js

# Substituir arquivo
mv temp-before.js connection-manager.js

echo "‚úÖ Sistema de extra√ß√£o adicionado antes da classe"

# Limpar arquivo tempor√°rio  
rm temp-real-extractor.js

# Agora adicionar intercepta√ß√£o no ponto correto
# Encontrar linha do remoteJid
REMOTE_JID_LINE=$(grep -n "let remoteJid = message.key.remoteJid;" connection-manager.js | cut -d: -f1)

if [ -z "$REMOTE_JID_LINE" ]; then
  echo "‚ùå Linha remoteJid n√£o encontrada"
  exit 1
fi

echo "üìç RemoteJid encontrado na linha $REMOTE_JID_LINE"

# Adicionar intercepta√ß√£o ap√≥s essa linha
sed -i "${REMOTE_JID_LINE}a\\
\\
      // üîß EXTRA√á√ÉO REAL DE @LID (n√£o mapeamento est√°tico)\\
      const originalRemoteJid = remoteJid;\\
      remoteJid = REAL_LID_NUMBER_EXTRACTOR.extractRealNumber(message, remoteJid, logPrefix);\\
      \\
      // Se extra√ß√£o retornou null, ignorar mensagem @lid\\
      if (remoteJid === null) {\\
        console.log(\`\${logPrefix} üö´ [REAL_EXTRACT] Ignorando mensagem @lid sem n√∫mero real: \${originalRemoteJid}\`);\\
        return; // Sair da fun√ß√£o, n√£o processar\\
      }\\
      \\
      // Log se n√∫mero foi extra√≠do\\
      if (originalRemoteJid !== remoteJid && originalRemoteJid.includes('@lid')) {\\
        console.log(\`\${logPrefix} ‚úÖ [REAL_EXTRACT] N√∫mero real extra√≠do: \${originalRemoteJid} ‚Üí \${remoteJid}\`);\\
      }" connection-manager.js

echo "‚úÖ Intercepta√ß√£o de extra√ß√£o real adicionada"

# Verificar sintaxe final
node -c connection-manager.js
if [ $? -eq 0 ]; then
  echo "‚úÖ Sintaxe final OK"
else
  echo "‚ùå Erro de sintaxe - restaurando backup"
  cp connection-manager.js.pre-real-fix connection-manager.js
  exit 1
fi

# Confirmar sistema
if grep -q "REAL_LID_NUMBER_EXTRACTOR" connection-manager.js; then
  echo "‚úÖ Sistema de extra√ß√£o real confirmado"
else
  echo "‚ùå Sistema n√£o encontrado - restaurando backup"
  cp connection-manager.js.pre-real-fix connection-manager.js  
  exit 1
fi

echo ""
echo "üéâ CORRE√á√ÉO CIR√öRGICA REAL APLICADA COM SUCESSO!"
echo ""
echo "üìã O que foi feito:"
echo "‚úÖ Sistema REAL_LID_NUMBER_EXTRACTOR adicionado"
echo "‚úÖ Extra√ß√£o inteligente do n√∫mero verdadeiro da mensagem"
echo "‚úÖ Ignora grupos completamente"
echo "‚úÖ Mensagens @lid sem n√∫mero real s√£o ignoradas"  
echo "‚úÖ Nenhum c√≥digo existente foi modificado"
echo ""
echo "üîç Pr√≥xima mensagem @lid mostrar√°:"
echo "- [REAL_EXTRACT] se encontrou n√∫mero real"
echo "- Ou ser√° ignorada se n√£o conseguir extrair"
EOFCIRURGICA