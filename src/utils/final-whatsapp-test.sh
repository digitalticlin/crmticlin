
#!/bin/bash
# TESTE FINAL - CONECTAR WHATSAPP E VALIDAR INTEGRA√á√ÉO COMPLETA
# Execute: chmod +x src/utils/final-whatsapp-test.sh && src/utils/final-whatsapp-test.sh

echo "üöÄ TESTE FINAL - CONECTAR WHATSAPP VIA SSH"
echo "=========================================="

# Configura√ß√µes
VPS_IP="31.97.24.222"
VPS_PORT="3002"
AUTH_TOKEN="3oOb0an43kLEO6cy3bP8LteKCTxshH8eytEV9QR314dcf0b3"
INSTANCE_NAME="teste_final_$(date +%s)"

echo "üìã Configura√ß√µes do teste:"
echo "   üî∏ VPS: ${VPS_IP}:${VPS_PORT}"
echo "   üî∏ Inst√¢ncia: ${INSTANCE_NAME}"
echo "   üî∏ Timestamp: $(date)"

# Fun√ß√£o para fazer requests com timeout
make_request() {
    local url=$1
    local method=${2:-GET}
    local data=${3:-""}
    
    if [ "$method" = "POST" ] && [ -n "$data" ]; then
        timeout 15 curl -s -X POST "$url" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            --data "$data"
    else
        timeout 15 curl -s "$url" \
            -H "Authorization: Bearer $AUTH_TOKEN"
    fi
}

echo ""
echo "1Ô∏è‚É£ VERIFICAR STATUS DO SERVIDOR"
echo "================================"
SERVER_STATUS=$(make_request "http://${VPS_IP}:${VPS_PORT}/health")

if echo "$SERVER_STATUS" | jq -e '.success' > /dev/null 2>&1; then
    echo "‚úÖ Servidor online e respondendo"
    echo "$SERVER_STATUS" | jq '{version, active_instances, permanent_mode, qr_validation_fix}'
else
    echo "‚ùå Servidor n√£o est√° respondendo"
    echo "Response: $SERVER_STATUS"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ CRIAR INST√ÇNCIA WHATSAPP"
echo "==========================="

CREATE_PAYLOAD="{\"instanceId\": \"$INSTANCE_NAME\", \"sessionName\": \"$INSTANCE_NAME\", \"webhookUrl\": \"https://kigyebrhfoljnydfipcr.supabase.co/functions/v1/webhook_whatsapp_web\"}"

echo "üì§ Enviando request para criar inst√¢ncia..."
CREATE_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/create" "POST" "$CREATE_PAYLOAD")

if echo "$CREATE_RESPONSE" | jq -e '.success' > /dev/null 2>&1; then
    echo "‚úÖ Inst√¢ncia criada com sucesso!"
    echo "$CREATE_RESPONSE" | jq '{success, instanceId, status, message}'
else
    echo "‚ùå Falha ao criar inst√¢ncia"
    echo "Response: $CREATE_RESPONSE"
    exit 1
fi

echo ""
echo "3Ô∏è‚É£ AGUARDAR QR CODE (60s)"
echo "========================="

QR_ATTEMPTS=0
MAX_QR_ATTEMPTS=12  # 12 tentativas x 5s = 60s
QR_FOUND=false

while [ $QR_ATTEMPTS -lt $MAX_QR_ATTEMPTS ] && [ "$QR_FOUND" = false ]; do
    QR_ATTEMPTS=$((QR_ATTEMPTS + 1))
    echo "üîÑ Tentativa $QR_ATTEMPTS/$MAX_QR_ATTEMPTS para obter QR Code..."
    
    QR_PAYLOAD="{\"instanceId\": \"$INSTANCE_NAME\"}"
    QR_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/qr" "POST" "$QR_PAYLOAD")
    
    if echo "$QR_RESPONSE" | jq -e '.success and .qrCode' > /dev/null 2>&1; then
        echo "‚úÖ QR Code obtido!"
        QR_CODE=$(echo "$QR_RESPONSE" | jq -r '.qrCode')
        echo ""
        echo "üì± ESCANEIE ESTE QR CODE NO SEU WHATSAPP:"
        echo "========================================="
        echo "$QR_CODE"
        echo "========================================="
        echo ""
        echo "üìù INSTRU√á√ïES:"
        echo "1. Abra o WhatsApp no seu celular"
        echo "2. V√° em Menu ‚Üí Aparelhos conectados"
        echo "3. Toque em 'Conectar um aparelho'"
        echo "4. Escaneie o QR code acima"
        echo ""
        QR_FOUND=true
        break
    else
        echo "‚è≥ QR Code ainda n√£o dispon√≠vel (status: $(echo "$QR_RESPONSE" | jq -r '.status // "unknown"'))"
        sleep 5
    fi
done

if [ "$QR_FOUND" = false ]; then
    echo "‚ùå Timeout: QR Code n√£o foi gerado em 60s"
    echo "üîç Verificando logs do servidor..."
    exit 1
fi

echo ""
echo "4Ô∏è‚É£ AGUARDAR CONEX√ÉO WHATSAPP (120s)"
echo "=================================="

CONNECTION_ATTEMPTS=0
MAX_CONNECTION_ATTEMPTS=24  # 24 tentativas x 5s = 120s
CONNECTED=false

echo "‚è≥ Aguardando voc√™ escanear o QR Code..."
echo "üí° Dica: O QR Code expira em alguns minutos, escaneie rapidamente!"

while [ $CONNECTION_ATTEMPTS -lt $MAX_CONNECTION_ATTEMPTS ] && [ "$CONNECTED" = false ]; do
    CONNECTION_ATTEMPTS=$((CONNECTION_ATTEMPTS + 1))
    echo "üîÑ Verificando conex√£o ($CONNECTION_ATTEMPTS/$MAX_CONNECTION_ATTEMPTS)..."
    
    STATUS_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/instance/$INSTANCE_NAME/status")
    
    if echo "$STATUS_RESPONSE" | jq -e '.success' > /dev/null 2>&1; then
        STATUS=$(echo "$STATUS_RESPONSE" | jq -r '.status // "unknown"')
        echo "üìä Status atual: $STATUS"
        
        if [ "$STATUS" = "ready" ] || [ "$STATUS" = "open" ] || [ "$STATUS" = "connected" ]; then
            echo "‚úÖ WhatsApp conectado com sucesso!"
            PHONE=$(echo "$STATUS_RESPONSE" | jq -r '.phone // "N/A"')
            PROFILE=$(echo "$STATUS_RESPONSE" | jq -r '.profileName // "N/A"')
            echo "üì± Telefone: $PHONE"
            echo "üë§ Perfil: $PROFILE"
            CONNECTED=true
            break
        fi
    else
        echo "‚ö†Ô∏è Erro ao verificar status: $STATUS_RESPONSE"
    fi
    
    sleep 5
done

if [ "$CONNECTED" = false ]; then
    echo "‚ùå Timeout: WhatsApp n√£o conectou em 120s"
    echo "üí° Poss√≠veis causas:"
    echo "   - QR Code n√£o foi escaneado"
    echo "   - QR Code expirou"
    echo "   - Problemas de rede"
    echo ""
    echo "üîç Status final da inst√¢ncia:"
    make_request "http://${VPS_IP}:${VPS_PORT}/instance/$INSTANCE_NAME/status" | jq '.'
    exit 1
fi

echo ""
echo "5Ô∏è‚É£ TESTE DE ENVIO DE MENSAGEM"
echo "============================="

echo "üì§ Testando envio de mensagem para o pr√≥prio n√∫mero..."

# Obter o n√∫mero conectado para enviar mensagem para si mesmo
PHONE_NUMBER=$(echo "$STATUS_RESPONSE" | jq -r '.phone')

if [ "$PHONE_NUMBER" != "null" ] && [ "$PHONE_NUMBER" != "N/A" ]; then
    TEST_MESSAGE="ü§ñ Teste autom√°tico do servidor WhatsApp - $(date)"
    SEND_PAYLOAD="{\"instanceId\": \"$INSTANCE_NAME\", \"phone\": \"$PHONE_NUMBER\", \"message\": \"$TEST_MESSAGE\"}"
    
    SEND_RESPONSE=$(make_request "http://${VPS_IP}:${VPS_PORT}/send" "POST" "$SEND_PAYLOAD")
    
    if echo "$SEND_RESPONSE" | jq -e '.success' > /dev/null 2>&1; then
        echo "‚úÖ Mensagem de teste enviada com sucesso!"
        echo "$SEND_RESPONSE" | jq '{success, messageId, timestamp}'
    else
        echo "‚ö†Ô∏è Falha ao enviar mensagem de teste"
        echo "Response: $SEND_RESPONSE"
    fi
else
    echo "‚ö†Ô∏è N√£o foi poss√≠vel obter o n√∫mero para teste de envio"
fi

echo ""
echo "6Ô∏è‚É£ VALIDAR PERSIST√äNCIA"
echo "======================="

echo "üîç Verificando estruturas de persist√™ncia..."

# Verificar diret√≥rios de sess√£o
if [ -d "/root/webhook-server-3002/.wwebjs_auth/$INSTANCE_NAME" ]; then
    echo "‚úÖ Diret√≥rio de sess√£o criado: /root/webhook-server-3002/.wwebjs_auth/$INSTANCE_NAME"
    SESSION_FILES=$(find "/root/webhook-server-3002/.wwebjs_auth/$INSTANCE_NAME" -type f | wc -l)
    echo "üìÅ Arquivos de sess√£o: $SESSION_FILES"
else
    echo "‚ö†Ô∏è Diret√≥rio de sess√£o n√£o encontrado"
fi

# Verificar se a inst√¢ncia est√° na lista
echo ""
echo "üìã Listando todas as inst√¢ncias ativas:"
INSTANCES_LIST=$(make_request "http://${VPS_IP}:${VPS_PORT}/instances")
echo "$INSTANCES_LIST" | jq '{total, instances: [.instances[] | {instanceId, status, phone, profileName}]}'

echo ""
echo "üéâ TESTE FINAL CONCLU√çDO!"
echo "========================="
echo "‚úÖ Servidor: FUNCIONANDO"
echo "‚úÖ Inst√¢ncia: CRIADA ($INSTANCE_NAME)"
echo "‚úÖ QR Code: GERADO"
echo "‚úÖ WhatsApp: CONECTADO"
echo "‚úÖ Persist√™ncia: VALIDADA"
echo ""

if [ "$CONNECTED" = true ]; then
    echo "üöÄ PR√ìXIMOS PASSOS:"
    echo "1. Acesse o frontend em /settings para gerenciar inst√¢ncias"
    echo "2. Use /whatsapp-chat para enviar mensagens"
    echo "3. A inst√¢ncia '$INSTANCE_NAME' ficar√° ativa permanentemente"
    echo "4. Reinicie o servidor para testar a reconex√£o autom√°tica"
    echo ""
    echo "üìä COMANDOS √öTEIS:"
    echo "   pm2 status                    # Ver status do servidor"
    echo "   pm2 logs webhook-server-3002  # Ver logs"
    echo "   pm2 restart webhook-server-3002 # Reiniciar (teste persist√™ncia)"
else
    echo "‚ö†Ô∏è WhatsApp n√£o foi conectado, mas o servidor est√° funcionando"
    echo "üí° Tente executar o script novamente e escaneie o QR rapidamente"
fi

echo ""
echo "üîó ENDPOINTS √öTEIS:"
echo "   Health: http://${VPS_IP}:${VPS_PORT}/health"
echo "   Status: http://${VPS_IP}:${VPS_PORT}/instances"
echo "   QR: http://${VPS_IP}:${VPS_PORT}/instance/qr"
echo ""
echo "================================================="
