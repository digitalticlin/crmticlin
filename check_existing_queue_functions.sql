-- ================================================================
-- üîç VERIFICAR FUN√á√ïES EXISTENTES PARA FILA
-- ================================================================

-- 1Ô∏è‚É£ Buscar fun√ß√µes que trabalham com fila
SELECT
    'üîç FUN√á√ïES DE FILA EXISTENTES' as check,
    routine_name,
    routine_type,
    CASE
        WHEN routine_name LIKE '%queue%' THEN 'üì¶ Queue function'
        WHEN routine_name LIKE '%read%' THEN 'üìñ Read function'
        WHEN routine_name LIKE '%delete%' THEN 'üóëÔ∏è Delete function'
        WHEN routine_name LIKE '%pgmq%' THEN 'üì¨ PGMQ function'
        ELSE '‚ùì Other'
    END as category
FROM information_schema.routines
WHERE routine_schema = 'public'
AND (
    routine_name LIKE '%queue%'
    OR routine_name LIKE '%read%'
    OR routine_name LIKE '%delete%'
    OR routine_name LIKE '%pgmq%'
    OR routine_name LIKE '%webhook%'
)
ORDER BY routine_name;

-- 2Ô∏è‚É£ Verificar se PGMQ √© acess√≠vel diretamente
SELECT
    'üì¨ PGMQ DIRETAMENTE ACESS√çVEL?' as check,
    CASE
        WHEN EXISTS (SELECT 1 FROM pg_extension WHERE extname = 'pgmq')
        THEN '‚úÖ PGMQ extension ativa'
        ELSE '‚ùå PGMQ n√£o encontrado'
    END as pgmq_status;

-- 3Ô∏è‚É£ Testar acesso direto ao PGMQ
DO $$
BEGIN
    BEGIN
        -- Testar se pgmq.read funciona
        PERFORM pgmq.read('webhook_message_queue', 1, 5);
        RAISE NOTICE '‚úÖ pgmq.read: FUNCIONA diretamente';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå pgmq.read: ERRO - %', SQLERRM;
    END;

    BEGIN
        -- Testar se pgmq.metrics funciona
        PERFORM pgmq.metrics('webhook_message_queue');
        RAISE NOTICE '‚úÖ pgmq.metrics: FUNCIONA diretamente';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE '‚ùå pgmq.metrics: ERRO - %', SQLERRM;
    END;
END $$;