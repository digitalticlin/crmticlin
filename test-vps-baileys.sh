#!/bin/bash

# üöÄ SCRIPT DE TESTE COMPLETO - VPS BAILEYS SERVER
# Execute este script para testar todas as funcionalidades

echo "üéØ INICIANDO TESTES COMPLETOS DO SERVIDOR BAILEYS VPS"
echo "========================================================"

# Configura√ß√µes ATUALIZADAS
VPS_IP="31.97.163.57"
PORT="3001"
BASE_URL="http://$VPS_IP:$PORT"
TEST_INSTANCE="test-$(date +%s)"
TEST_PHONE="5511999999999"  # ‚ö†Ô∏è SUBSTITUA PELO SEU N√öMERO

echo "üìã Configura√ß√µes:"
echo "   VPS IP: $VPS_IP (NOVA VPS)"
echo "   Porta: $PORT"
echo "   Inst√¢ncia de Teste: $TEST_INSTANCE"
echo "   Telefone de Teste: $TEST_PHONE"
echo ""

# Fun√ß√£o para testar endpoint
test_endpoint() {
    local name="$1"
    local url="$2"
    local method="$3"
    local data="$4"
    
    echo "üîç Testando: $name"
    echo "   URL: $url"
    
    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "\n%{http_code}" -X GET "$url" -H "Content-Type: application/json")
    elif [ "$method" = "POST" ]; then
        response=$(curl -s -w "\n%{http_code}" -X POST "$url" -H "Content-Type: application/json" -d "$data")
    elif [ "$method" = "DELETE" ]; then
        response=$(curl -s -w "\n%{http_code}" -X DELETE "$url" -H "Content-Type: application/json")
    fi
    
    # Separar body e status code
    body=$(echo "$response" | sed '$d')
    status_code=$(echo "$response" | tail -n1)
    
    echo "   Status: $status_code"
    echo "   Resposta: $body" | jq 2>/dev/null || echo "   Resposta: $body"
    echo ""
    
    # Verificar se foi bem-sucedido
    if [[ "$status_code" =~ ^2[0-9][0-9]$ ]]; then
        echo "   ‚úÖ SUCESSO"
    else
        echo "   ‚ùå ERRO"
    fi
    echo "----------------------------------------"
}

echo "üîç FASE 1: TESTES B√ÅSICOS"
echo "=========================="

test_endpoint "Health Check" \
    "$BASE_URL/health" \
    "GET"

test_endpoint "Status do Servidor" \
    "$BASE_URL/status" \
    "GET"

test_endpoint "Listar Inst√¢ncias" \
    "$BASE_URL/instances" \
    "GET"

echo ""
echo "üîç FASE 2: GEST√ÉO DE INST√ÇNCIAS"
echo "================================"

test_endpoint "Criar Inst√¢ncia" \
    "$BASE_URL/instance/create" \
    "POST" \
    "{\"instanceId\":\"$TEST_INSTANCE\",\"createdByUserId\":\"test-user-123\"}"

echo "‚è≥ Aguardando 15 segundos para gera√ß√£o do QR..."
sleep 15

test_endpoint "Obter QR Code" \
    "$BASE_URL/instance/$TEST_INSTANCE/qr" \
    "GET"

test_endpoint "Status da Inst√¢ncia" \
    "$BASE_URL/instance/$TEST_INSTANCE/status" \
    "GET"

test_endpoint "Detalhes da Inst√¢ncia" \
    "$BASE_URL/instance/$TEST_INSTANCE" \
    "GET"

echo ""
echo "üîç FASE 3: TESTES DE WEBHOOK E DIAGN√ìSTICO"
echo "==========================================="

test_endpoint "Diagn√≥stico de Dados" \
    "$BASE_URL/instance/$TEST_INSTANCE/debug-data" \
    "GET"

test_endpoint "Importa√ß√£o Robusta" \
    "$BASE_URL/instance/$TEST_INSTANCE/import-history-robust" \
    "POST" \
    "{\"importType\":\"both\",\"batchSize\":10}"

echo ""
echo "üîç FASE 4: ENVIO DE MENSAGENS"
echo "=============================="
echo "‚ö†Ô∏è  ATEN√á√ÉO: Para testar o envio, voc√™ precisa:"
echo "   1. Escanear o QR Code mostrado acima"
echo "   2. Aguardar a conex√£o ser estabelecida"
echo "   3. Substituir o n√∫mero de teste pelo seu n√∫mero"
echo ""

read -p "ü§î Deseja testar o envio de mensagens? (y/n): " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    test_endpoint "Enviar Mensagem de Teste" \
        "$BASE_URL/send" \
        "POST" \
        "{\"instanceId\":\"$TEST_INSTANCE\",\"phone\":\"$TEST_PHONE\",\"message\":\"üéØ Teste do servidor Baileys VPS NOVA - $(date)\"}"

    test_endpoint "Enviar com N√∫mero Formatado" \
        "$BASE_URL/send" \
        "POST" \
        "{\"instanceId\":\"$TEST_INSTANCE\",\"phone\":\"$TEST_PHONE@s.whatsapp.net\",\"message\":\"‚úÖ Teste com n√∫mero formatado NOVA VPS - $(date)\"}"
else
    echo "‚è≠Ô∏è Pulando testes de envio de mensagens"
fi

echo ""
echo "üîç FASE 5: LIMPEZA"
echo "=================="

test_endpoint "Deletar Inst√¢ncia" \
    "$BASE_URL/instance/$TEST_INSTANCE" \
    "DELETE"

test_endpoint "Verificar Dele√ß√£o" \
    "$BASE_URL/instances" \
    "GET"

echo ""
echo "üìä RESUMO DOS TESTES"
echo "===================="
echo "‚úÖ Testes b√°sicos conclu√≠dos"
echo "‚úÖ Gest√£o de inst√¢ncias testada"
echo "‚úÖ Webhooks e diagn√≥sticos verificados"
echo "‚úÖ Endpoints de envio dispon√≠veis"
echo "‚úÖ Limpeza realizada"
echo ""
echo "üéØ PR√ìXIMOS PASSOS:"
echo "   1. Verificar logs: pm2 logs whatsapp-server"
echo "   2. Testar via frontend"
echo "   3. Verificar webhooks no Supabase"
echo ""
echo "üöÄ TESTES CONCLU√çDOS NA NOVA VPS!" 