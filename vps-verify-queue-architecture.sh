#!/bin/bash

# üîç VERIFICA√á√ÉO DA ARQUITETURA FORK + QUEUES
echo "üîç VERIFICA√á√ÉO DA ARQUITETURA FORK + QUEUES"
echo "Data: $(date)"
echo "================================================="

VPS_SERVER="root@vpswhatsapp"
VPS_PATH="~/whatsapp-server"

echo ""
echo "üìä 1. STATUS DO PM2 E ARQUITETURA"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üìã Status PM2:'
pm2 status

echo ''
echo 'üîç Verificando modo FORK:'
pm2 list | grep -i fork && echo '‚úÖ FORK mode ativo' || echo '‚ùå FORK mode n√£o encontrado'

echo ''
echo 'üìä Detalhes dos processos:'
pm2 show whatsapp-server 2>/dev/null | grep -E 'mode|exec_mode|instances' || echo '‚ÑπÔ∏è Detalhes n√£o dispon√≠veis'
"

echo ""
echo "üèóÔ∏è 2. VERIFICA√á√ÉO DE REDIS E QUEUES"
echo "================================================="
ssh $VPS_SERVER "
echo 'üîç Verificando Redis:'
redis-cli ping 2>/dev/null && echo '‚úÖ Redis funcionando' || echo '‚ùå Redis n√£o est√° rodando'

echo ''
echo 'üì¶ Verificando instala√ß√£o do Redis:'
which redis-server && echo '‚úÖ Redis server instalado' || echo '‚ùå Redis server n√£o instalado'

echo ''
echo 'üîß Status do servi√ßo Redis:'
systemctl is-active redis-server 2>/dev/null && echo '‚úÖ Redis service ativo' || echo '‚ÑπÔ∏è Redis service status indispon√≠vel'
"

echo ""
echo "üìã 3. VERIFICA√á√ÉO DOS ENDPOINTS DE QUEUE"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üß™ Testando endpoint de queue status:'
curl -s http://localhost:3001/queue-status | head -10 2>/dev/null || echo '‚ùå Endpoint /queue-status n√£o responde'

echo ''
echo 'üß™ Testando health check:'
curl -s http://localhost:3001/health | grep -E 'queue|redis|worker' || echo '‚ÑπÔ∏è Sem informa√ß√µes de queue no health check'

echo ''
echo 'üìä Testando status geral:'
curl -s http://localhost:3001/status | grep -E 'queue|redis|worker' || echo '‚ÑπÔ∏è Sem informa√ß√µes de queue no status'
"

echo ""
echo "üìÇ 4. ESTRUTURA DE ARQUIVOS DO PROJETO"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üìÅ Estrutura de arquivos:'
ls -la

echo ''
echo 'üîç Verificando arquivos de configura√ß√£o:'
echo '  package.json:' \$([ -f package.json ] && echo '‚úÖ' || echo '‚ùå')
echo '  ecosystem.config.js:' \$([ -f ecosystem.config.js ] && echo '‚úÖ' || echo '‚ùå')
echo '  server.js:' \$([ -f server.js ] && echo '‚úÖ' || echo '‚ùå')

echo ''
echo 'üì¶ Verificando depend√™ncias de queue:'
if [ -f package.json ]; then
    echo 'üîç Depend√™ncias relacionadas a queues:'
    grep -E '\"bull\"|\"redis\"|\"queue\"' package.json || echo '‚ÑπÔ∏è Nenhuma depend√™ncia de queue encontrada'
else
    echo '‚ùå package.json n√£o encontrado'
fi
"

echo ""
echo "üîß 5. VERIFICA√á√ÉO DOS WORKERS NO C√ìDIGO"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üîç Verificando conte√∫do do server.js:'
if [ -f server.js ]; then
    echo 'üìã Procurando por implementa√ß√µes de queue:'
    grep -n -E 'queue|Queue|redis|Redis|bull|Bull|worker|Worker' server.js | head -10 || echo '‚ÑπÔ∏è Nenhuma refer√™ncia de queue encontrada no server.js'
else
    echo '‚ùå server.js n√£o encontrado'
fi

echo ''
echo 'üîç Verificando diret√≥rios de workers:'
ls -la src/ 2>/dev/null || echo '‚ÑπÔ∏è Diret√≥rio src/ n√£o encontrado'
find . -name '*worker*' -o -name '*queue*' 2>/dev/null || echo '‚ÑπÔ∏è Nenhum arquivo de worker/queue encontrado'
"

echo ""
echo "‚ö° 6. TESTE DE FUNCIONALIDADE DAS QUEUES"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üß™ Testando cria√ß√£o de inst√¢ncia (deve usar queues):'
curl -s -X POST http://localhost:3001/instance/create -H 'Content-Type: application/json' -d '{\"instanceId\":\"test-queue\"}' | head -5 || echo '‚ùå Falha no teste de inst√¢ncia'

echo ''
echo 'üìä Verificando se h√° logs de queue nos √∫ltimos logs:'
pm2 logs whatsapp-server --lines 20 --nostream | grep -i -E 'queue|redis|worker|bull' | tail -5 || echo '‚ÑπÔ∏è Nenhum log de queue recente'
"

echo ""
echo "üìä 7. RELAT√ìRIO DA ARQUITETURA ATUAL"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üìã RESUMO DA VERIFICA√á√ÉO:'
echo ''

# Verificar se √© FORK
PM2_MODE=\$(pm2 list | grep whatsapp-server | awk '{print \$4}' | head -1)
echo \"üîß Modo PM2: \$PM2_MODE\"

# Verificar Redis
REDIS_STATUS=\$(redis-cli ping 2>/dev/null && echo 'OK' || echo 'FALHA')
echo \"üì¶ Redis: \$REDIS_STATUS\"

# Verificar endpoints
HEALTH_STATUS=\$(curl -s http://localhost:3001/health >/dev/null && echo 'OK' || echo 'FALHA')
echo \"üåê Servidor: \$HEALTH_STATUS\"

# Verificar queues no c√≥digo
QUEUE_CODE=\$(grep -q -E 'queue|Queue|redis|Redis|bull|Bull' server.js 2>/dev/null && echo 'ENCONTRADO' || echo 'N√ÉO ENCONTRADO')
echo \"üíª C√≥digo de Queue: \$QUEUE_CODE\"

echo ''
echo 'üéØ STATUS DA ARQUITETURA:'
if [ \"\$PM2_MODE\" = \"fork\" ] && [ \"\$REDIS_STATUS\" = \"OK\" ] && [ \"\$QUEUE_CODE\" = \"ENCONTRADO\" ]; then
    echo '‚úÖ ARQUITETURA FORK + QUEUES IMPLEMENTADA!'
elif [ \"\$PM2_MODE\" = \"fork\" ] && [ \"\$HEALTH_STATUS\" = \"OK\" ]; then
    echo '‚ö†Ô∏è FORK MODE OK, MAS QUEUES PRECISAM SER IMPLEMENTADAS'
else
    echo '‚ùå ARQUITETURA PRECISA SER CORRIGIDA'
fi
"

echo ""
echo "‚úÖ VERIFICA√á√ÉO CONCLU√çDA!"
echo "================================================="
echo "üîç Analise o relat√≥rio acima"
echo "üìä Se queues n√£o estiverem implementadas, posso criar a estrutura"