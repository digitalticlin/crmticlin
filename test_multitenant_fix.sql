-- üß™ TESTE: Verificar se a corre√ß√£o multitenant funcionou
-- Execute este arquivo AP√ìS aplicar a migra√ß√£o 20250908200001_fix_multitenant_rls_critical.sql

-- ========================================
-- 1. TESTAR CONTEXTO AUTH
-- ========================================

SELECT '=== TESTE DE CONTEXTO AUTH ===' as info;

-- Verificar se auth.uid() funciona
SELECT 
    auth.uid() as current_auth_uid,
    CASE 
        WHEN auth.uid() IS NULL THEN '‚ùå AINDA NULL - RLS N√ÉO VAI FUNCIONAR!'
        ELSE '‚úÖ Auth funcionando'
    END as status_auth;

-- ========================================
-- 2. TESTAR RLS POLICIES LEADS
-- ========================================

SELECT '=== TESTE RLS LEADS ===' as info;

-- Contar leads que o usu√°rio atual pode ver
SELECT 
    'Leads vis√≠veis com RLS' as tipo,
    COUNT(*) as total_leads_visiveis,
    CASE 
        WHEN COUNT(*) = 455 THEN '‚úÖ CORRETO - Admin v√™ apenas seus leads'
        WHEN COUNT(*) > 1000 THEN '‚ùå ERRO - Vendo todos os leads do sistema'
        ELSE '‚ö†Ô∏è VERIFICAR - N√∫mero inesperado'
    END as status_multitenant
FROM leads;

-- Ver distribui√ß√£o por usu√°rio (se RLS estiver funcionando, s√≥ mostrar√° do usu√°rio atual)
SELECT 
    'Distribui√ß√£o por created_by_user_id' as info,
    created_by_user_id,
    COUNT(*) as total
FROM leads 
GROUP BY created_by_user_id
ORDER BY total DESC;

-- ========================================
-- 3. TESTAR RLS PROFILES
-- ========================================

SELECT '=== TESTE RLS PROFILES ===' as info;

-- Ver quantos profiles o usu√°rio pode ver
SELECT 
    'Profiles vis√≠veis' as tipo,
    COUNT(*) as total_profiles,
    array_agg(email) as emails_visiveis
FROM profiles;

-- ========================================
-- 4. TESTAR FUNCTION AUXILIAR
-- ========================================

SELECT '=== TESTE FUNCTION AUXILIAR ===' as info;

-- Usar a function criada na migra√ß√£o
SELECT * FROM test_auth_context();

-- ========================================
-- 5. VERIFICAR POLICIES ATIVAS
-- ========================================

SELECT '=== POLICIES ATIVAS ===' as info;

-- Listar policies das tabelas cr√≠ticas
SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    qual
FROM pg_policies 
WHERE tablename IN ('leads', 'profiles')
ORDER BY tablename, policyname;

-- ========================================
-- RESULTADO ESPERADO
-- ========================================

-- Se tudo estiver funcionando:
-- ‚úÖ auth.uid() retorna UUID v√°lido (n√£o null)
-- ‚úÖ Leads vis√≠veis = 455 (apenas do admin)
-- ‚úÖ Profiles vis√≠veis = perfil do admin + equipe criada por ele
-- ‚úÖ N√£o aparece dados de outros usu√°rios/empresas