#!/bin/bash

# üîç AN√ÅLISE COMPLETA DO SERVIDOR WHATSAPP
echo "üîç AN√ÅLISE COMPLETA DO SERVIDOR WHATSAPP"
echo "Verifica√ß√£o detalhada: Status, Crashes, Mem√≥ria, Inst√¢ncias, Logs"
echo "Data: $(date)"
echo "================================================="

VPS_SERVER="root@31.97.163.57"
VPS_PATH="/root/whatsapp-server"

echo ""
echo "üìÑ 1. AN√ÅLISE DO C√ìDIGO SERVER.JS"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üìÑ Estrutura do server.js:'
echo 'üîç Total de linhas:'
wc -l server.js

echo ''
echo 'üîç Endpoints encontrados:'
grep -n 'app\\.get\\|app\\.post\\|app\\.put\\|app\\.delete' server.js

echo ''
echo 'üîç Verificando endpoints /health duplicados:'
grep -n -A2 -B2 '/health' server.js

echo ''
echo 'üîç Verificando inicializa√ß√£o do ConnectionManager:'
grep -n -A3 -B3 'ConnectionManager' server.js

echo ''
echo 'üîç Verificando app.listen:'
grep -n -A3 'app\\.listen' server.js
"

echo ""
echo "üìä 2. STATUS ATUAL DO SISTEMA"
echo "================================================="
ssh $VPS_SERVER "
echo 'üìä Status PM2 detalhado:'
pm2 status

echo ''
echo 'üîß Informa√ß√µes detalhadas do whatsapp-server:'
pm2 show whatsapp-server

echo ''
echo 'üíæ Uso de mem√≥ria em tempo real:'
pm2 monit --no-daemon | head -20

echo ''
echo 'üåê Portas em uso (3001-3005):'
netstat -tlnp | grep -E ':300[1-5]'

echo ''
echo 'üìà Uptime e recursos do sistema:'
uptime
free -h
"

echo ""
echo "ü©∫ 3. TESTE DOS ENDPOINTS HTTP"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'ü©∫ Testando endpoint /health:'
echo 'Comando: curl -s http://localhost:3001/health'
HEALTH_RESPONSE=\$(curl -s http://localhost:3001/health 2>/dev/null)
echo 'Resposta:'
echo \"\$HEALTH_RESPONSE\" | jq . 2>/dev/null || echo \"\$HEALTH_RESPONSE\"

echo ''
echo 'üîç Extraindo dados das inst√¢ncias do /health:'
if echo \"\$HEALTH_RESPONSE\" | grep -q '\"instances\"'; then
    echo 'Total:' \$(echo \"\$HEALTH_RESPONSE\" | grep -o '\"total\":[0-9]*' | cut -d: -f2)
    echo 'Ativas:' \$(echo \"\$HEALTH_RESPONSE\" | grep -o '\"active\":[0-9]*' | cut -d: -f2) 
    echo 'Conectando:' \$(echo \"\$HEALTH_RESPONSE\" | grep -o '\"connecting\":[0-9]*' | cut -d: -f2)
    echo 'Com erro:' \$(echo \"\$HEALTH_RESPONSE\" | grep -o '\"error\":[0-9]*' | cut -d: -f2)
else
    echo 'Dados de inst√¢ncias n√£o encontrados na resposta'
fi

echo ''
echo 'üîç Testando outros endpoints poss√≠veis:'
echo 'GET /status:'
curl -s http://localhost:3001/status | head -3

echo ''
echo 'GET / (raiz):'
curl -s http://localhost:3001/ | head -3

echo ''
echo 'GET /instances (se existir):'
curl -s -o /dev/null -w 'HTTP Code: %{http_code}' http://localhost:3001/instances
echo ''
"

echo ""
echo "üì± 4. AN√ÅLISE DAS INST√ÇNCIAS WHATSAPP"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üì± Verificando pasta auth_info:'
if [ -d auth_info ]; then
    echo '‚úÖ Pasta auth_info existe'
    echo ''
    echo 'Estrutura da pasta:'
    ls -la auth_info/ | head -15
    
    echo ''
    echo 'Total de subpastas (inst√¢ncias salvas):'
    ls -la auth_info/ | grep '^d' | grep -v '^d.*\\s\\.$\\|^d.*\\s\\.\\.$' | wc -l
    
    echo ''
    echo 'Inst√¢ncias com creds.json:'
    find auth_info -name 'creds.json' -exec dirname {} \\; | sed 's|auth_info/||' | head -10
    
    echo ''
    echo 'Tamanhos dos arquivos creds.json:'
    find auth_info -name 'creds.json' -exec ls -lh {} \\; | head -10
else
    echo '‚ùå Pasta auth_info n√£o encontrada!'
fi

echo ''
echo 'üìä Verificando ConnectionManager em mem√≥ria:'
ps aux | grep 'whatsapp-server/server.js' | grep -v grep
"

echo ""
echo "üìã 5. AN√ÅLISE DETALHADA DOS LOGS"
echo "================================================="
ssh $VPS_SERVER "
echo 'üìã Logs do whatsapp-server (√∫ltimas 30 linhas):'
pm2 logs whatsapp-server --lines 30 --nostream

echo ''
echo 'üîç Procurando por erros nos logs:'
pm2 logs whatsapp-server --lines 100 --nostream | grep -i -E 'error|erro|fail|exception|crash' | tail -10

echo ''
echo 'üîç Procurando por @lid nos logs:'
pm2 logs whatsapp-server --lines 50 --nostream | grep -i '@lid' | tail -5

echo ''
echo 'üîç Procurando por inicializa√ß√£o de inst√¢ncias:'
pm2 logs whatsapp-server --lines 50 --nostream | grep -i -E 'instanc|connection|whatsapp' | tail -10

echo ''
echo 'üìä Estat√≠sticas dos logs:'
echo 'Total de linhas no log:'
pm2 logs whatsapp-server --lines 1000 --nostream | wc -l
echo '√öltimos 5 timestamps:'
pm2 logs whatsapp-server --lines 10 --nostream | grep -o '[0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\}T[0-9]\\{2\\}:[0-9]\\{2\\}:[0-9]\\{2\\}' | tail -5
"

echo ""
echo "üíæ 6. AN√ÅLISE DE MEM√ìRIA E PERFORMANCE"
echo "================================================="
ssh $VPS_SERVER "
echo 'üíæ Uso de mem√≥ria detalhado:'
echo 'Sistema geral:'
free -h

echo ''
echo 'Processos Node.js por mem√≥ria:'
ps aux | grep node | grep -v grep | sort -k6 -nr

echo ''
echo 'Whatsapp-server espec√≠fico:'
ps aux | grep 'whatsapp-server/server.js' | grep -v grep

echo ''
echo 'üìä Limites de mem√≥ria configurados (PM2):'
pm2 show whatsapp-server | grep -E 'max_memory_restart|memory'

echo ''
echo 'üìà Hist√≥rico de restarts:'
pm2 show whatsapp-server | grep -E 'restart\\|restarts\\|uptime'

echo ''
echo '‚ö° Load average do sistema:'
uptime
cat /proc/loadavg
"

echo ""
echo "üîÑ 7. VERIFICA√á√ÉO DE CRASHES E ESTABILIDADE"
echo "================================================="
ssh $VPS_SERVER "
echo 'üîÑ Verificando hist√≥rico de crashes:'
pm2 show whatsapp-server | grep -A5 -B5 'restart'

echo ''
echo 'üìä Logs de erro espec√≠ficos:'
if [ -f /root/.pm2/logs/whatsapp-server-error-*.log ]; then
    echo '√öltimos erros registrados:'
    tail -20 /root/.pm2/logs/whatsapp-server-error-*.log
else
    echo 'Nenhum log de erro encontrado'
fi

echo ''
echo 'üîç Verificando se h√° loops de restart:'
pm2 logs whatsapp-server --lines 20 --nostream | grep -E 'started\\|stopped\\|restart'

echo ''
echo 'üìã Status de sa√∫de geral:'
pm2 ping
"

echo ""
echo "‚úÖ 8. RELAT√ìRIO FINAL DE AN√ÅLISE"
echo "================================================="
ssh $VPS_SERVER "
cd $VPS_PATH

echo 'üéØ RELAT√ìRIO FINAL:'
echo '================================'

# Status do PM2
SERVER_STATUS=\$(pm2 list | grep whatsapp-server | awk '{print \$10}' | head -1)
echo \"üåê Status PM2: \$SERVER_STATUS\"

# Mem√≥ria atual
MEMORY=\$(ps aux | grep 'whatsapp-server/server.js' | grep -v grep | awk '{print int(\$6/1024)}' | head -1)
echo \"üíæ Mem√≥ria atual: \${MEMORY}MB\"

# Uptime
UPTIME=\$(pm2 show whatsapp-server | grep uptime | awk '{print \$3}')
echo \"‚è∞ Uptime: \$UPTIME\"

# Restarts
RESTARTS=\$(pm2 show whatsapp-server | grep restarts | awk '{print \$3}')
echo \"üîÑ Total restarts: \$RESTARTS\"

# Porta ativa
PORT_STATUS=\$(netstat -tlnp | grep :3001 >/dev/null && echo 'ATIVA' || echo 'INATIVA')
echo \"üåê Porta 3001: \$PORT_STATUS\"

# HTTP funcionando
HTTP_STATUS=\$(curl -s -o /dev/null -w '%{http_code}' http://localhost:3001/health)
echo \"ü©∫ HTTP /health: \$HTTP_STATUS\"

# Inst√¢ncias
HEALTH_DATA=\$(curl -s http://localhost:3001/health 2>/dev/null)
if echo \"\$HEALTH_DATA\" | grep -q '\"total\"'; then
    TOTAL=\$(echo \"\$HEALTH_DATA\" | grep -o '\"total\":[0-9]*' | cut -d: -f2)
    ACTIVE=\$(echo \"\$HEALTH_DATA\" | grep -o '\"active\":[0-9]*' | cut -d: -f2)
    echo \"üì± Inst√¢ncias: \${ACTIVE}/\${TOTAL}\"
else
    echo 'üì± Inst√¢ncias: Dados n√£o dispon√≠veis'
fi

echo ''
echo 'üìä DIAGN√ìSTICO GERAL:'
if [ \"\$SERVER_STATUS\" = \"online\" ] && [ \"\$PORT_STATUS\" = \"ATIVA\" ] && [ \"\$HTTP_STATUS\" = \"200\" ]; then
    echo 'üéâ ‚úÖ SERVIDOR COMPLETAMENTE FUNCIONAL'
    echo 'üöÄ Todos os componentes est√£o operacionais'
    
    if [ \"\$RESTARTS\" -gt 5 ] 2>/dev/null; then
        echo '‚ö†Ô∏è Alto n√∫mero de restarts - investigar estabilidade'
    else
        echo '‚úÖ Sistema est√°vel (poucos restarts)'
    fi
    
    if [ \"\$MEMORY\" -gt 500 ] 2>/dev/null; then
        echo '‚ö†Ô∏è Alto uso de mem√≥ria - monitorar'
    else
        echo '‚úÖ Uso de mem√≥ria normal'
    fi
else
    echo '‚ùå PROBLEMAS DETECTADOS:'
    [ \"\$SERVER_STATUS\" != \"online\" ] && echo \"   - PM2 Status: \$SERVER_STATUS\"
    [ \"\$PORT_STATUS\" != \"ATIVA\" ] && echo \"   - Porta 3001 inativa\"
    [ \"\$HTTP_STATUS\" != \"200\" ] && echo \"   - HTTP n√£o responde corretamente\"
fi
"

echo ""
echo "üöÄ AN√ÅLISE COMPLETA FINALIZADA!"
echo "================================================="
echo "üìä Todos os aspectos do servidor foram analisados"
echo "üîç Verifique o relat√≥rio final acima para diagn√≥stico"