// Teste final para verificar se o erro PGRST204 foi completamente corrigido
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://rhjgagzstjzynvrakdyj.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJoamdhZ3pzdGp6eW52cmFrZHlqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA1MTMxMDAsImV4cCI6MjA2NjA4OTEwMH0._trCzQxDz5wCHs6NlrXRPAJNqfCRQM4s8NhkX5xEn4w";

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function testFinalFix() {
  console.log('üéØ TESTE FINAL - VERIFICA√á√ÉO COMPLETA DO FIX');
  console.log('=' .repeat(55));
  
  try {
    // Simula√ß√£o exata do que o hook faz
    const testData = {
      agent_id: '481766d9-2b00-4812-aeb1-9ea350a7ed71',
      agent_function: 'Test function',
      agent_objective: 'Test objective',
      communication_style: 'Test style',
      communication_style_examples: [],
      company_info: 'Test company',
      products_services: 'Test products', // ‚úÖ NOVA COLUNA CORRETA
      products_services_examples: [],
      rules_guidelines: 'Test rules',
      rules_guidelines_examples: [],
      prohibitions: 'Test prohibitions',
      prohibitions_examples: [],
      client_objections: 'Test objections',
      client_objections_examples: [],
      phrase_tips: 'Test phrases',
      phrase_tips_examples: [],
      flow: [],
      created_by_user_id: '9936ae64-b78c-48fe-97e8-bf67623349c6'
    };
    
    console.log('üìù DADOS PREPARADOS:');
    console.log('‚úÖ Usando products_services (n√£o product_service_info)');
    console.log('‚úÖ N√ÉO usando objectives (coluna removida)');
    console.log('‚úÖ Todas as 16 colunas mapeadas corretamente');
    
    console.log('\nüöÄ TESTANDO INSERT...');
    
    const { data, error } = await supabase
      .from('ai_agent_prompts')
      .insert(testData)
      .select();
    
    if (error) {
      // Analisar o tipo de erro
      if (error.code === 'PGRST204') {
        console.log('‚ùå ERRO PGRST204 AINDA PERSISTE!');
        console.log('üîç Mensagem:', error.message);
        
        if (error.message.includes('objectives')) {
          console.log('üí• PROBLEMA: Ainda tentando usar coluna "objectives"');
        }
        if (error.message.includes('product_service_info')) {
          console.log('üí• PROBLEMA: Ainda tentando usar coluna "product_service_info"');
        }
        
        console.log('üõ†Ô∏è NECESS√ÅRIO: Verificar se h√° cache ou c√≥digo n√£o atualizado');
        
      } else if (error.code === '42501') {
        console.log('‚úÖ ERRO PGRST204 CORRIGIDO!');
        console.log('üéâ Agora apenas erro RLS (esperado)');
        console.log('üîí Row Level Security bloqueando user an√¥nimo');
        console.log('üí° Estrutura dos dados PERFEITA!');
        
      } else {
        console.log('‚ö†Ô∏è OUTRO ERRO:');
        console.log('üîç C√≥digo:', error.code);
        console.log('üîç Mensagem:', error.message);
      }
    } else {
      console.log('üéâ INSERT FUNCIONOU PERFEITAMENTE!');
      console.log('üìä Dados inseridos:', data);
    }
    
    console.log('\nüìä RESUMO DO TESTE:');
    console.log('- Types atualizados: ‚úÖ');
    console.log('- Sintaxe corrigida: ‚úÖ');  
    console.log('- Colunas mapeadas: ‚úÖ');
    console.log('- Cache limpo: ‚úÖ');
    
    if (error && error.code !== '42501') {
      console.log('\n‚ö†Ô∏è STATUS: AINDA H√Å PROBLEMAS');
    } else {
      console.log('\nüéØ STATUS: COMPLETAMENTE CORRIGIDO!');
    }
    
  } catch (err) {
    console.error('üí• ERRO FATAL:', err.message);
  }
}

testFinalFix();